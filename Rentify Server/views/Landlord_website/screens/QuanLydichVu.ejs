<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Danh sách bài đăng</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>

<body>


    <h2 class="text-center" style="color: rgb(0, 0, 0);">Danh sách dịch vụ</h2>

    <div class="container mb-4">
        <!-- add new -->
        <div class="container my-3">
            <button id="btnAdd" class="btn btn-success btn-lg">
                <i class="bi bi-plus-circle"></i> Add New Service
            </button>
        </div>
        <!-- Modal Thêm Dịch vụ -->
        <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addUserModalLabel">Thêm Dịch Vụ Mới</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addUserForm" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label for="name" class="form-label">Tên dịch vụ</label>
                                <input type="text" class="form-control" id="name" placeholder="Nhập tên dịch vụ"
                                    required>
                            </div>
                            <div class="mb-3">
                                <label for="description" class="form-label">Mô tả</label>
                                <textarea class="form-control" id="description" rows="3" placeholder="Mô tả dịch vụ"
                                    required></textarea>
                            </div>
                            <div class="mb-3">
                                <label for="price" class="form-label">Giá</label>
                                <input type="number" class="form-control" id="price" placeholder="Nhập giá" required>
                            </div>
                            <div class="mb-3">
                                <label for="photos" class="form-label">Ảnh dịch vụ</label>
                                <input type="file" class="form-control" id="photos" name="photos" accept="image/*"
                                    multiple />
                            </div>
                            <button type="submit" class="btn btn-primary">Thêm mới</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <!-- Modal: Sửa dịch vụ -->
        <div class="modal fade" id="editServiceModal" tabindex="-1" aria-labelledby="editServiceModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editServiceModalLabel">Sửa Dịch Vụ</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editServiceForm" enctype="multipart/form-data">
                            <input type="hidden" id="editServiceId" />
                            <div class="mb-3">
                                <label for="editName" class="form-label">Tên Dịch Vụ</label>
                                <input type="text" class="form-control" id="editName" required />
                            </div>
                            <div class="mb-3">
                                <label for="editDescription" class="form-label">Mô Tả</label>
                                <textarea class="form-control" id="editDescription" rows="3" required></textarea>
                            </div>
                            <div class="mb-3">
                                <label for="editPrice" class="form-label">Giá Dịch Vụ</label>
                                <input type="number" class="form-control" id="editPrice" required />
                            </div>
                            <div class="mb-3">
                                <label for="editPhotos" class="form-label">Ảnh Dịch Vụ</label>
                                <input type="file" class="form-control" id="editPhotos" name="editPhotos"
                                    accept="image/*" multiple />
                            </div>

                            <!-- Phần tử để hiển thị ảnh hiện tại -->
                            <div id="editPhotoPreview" class="mb-3"></div>

                            <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Dịch vụ</th>
                        <th>Mô tả</th>
                        <th>Giá tiền</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (data && data.length> 0) { %>
                        <% data.forEach((item,index)=> { %>
                            <tr>
                                <td>
                                    <%= index + 1 %>
                                </td>
                                <td>
                                    <%= item.name || "Chưa có tên" %>
                                </td>
                                <td>
                                    <%= item.description || "Không có mô tả" %>
                                </td>
                                <td>
                                    <%= item.price || "Không có giá" %>
                                </td>
                                <td class="text-center">
                                    <button class="btn btn-primary btn-sm" data-show-list='<%- JSON.stringify(item) %>'
                                        onclick="openDetailModal(this)">
                                        Xem chi tiết
                                    </button>
                                    <button class="btn btn-warning btn-sm"
                                        onclick="editService('<%= item._id %>', '<%= item.name %>', '<%= item.description %>', '<%= item.price %>')">
                                        Sửa
                                    </button>
                                    <button class="btn btn-danger btn-sm" onclick="confirmDelete('<%= item._id %>')">
                                        Xóa
                                    </button>
                                </td>
                            </tr>
                            <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="4" class="text-center">Không có dịch vụ nào được tìm thấy.</td>
                                    </tr>
                                    <% } %>
                </tbody>
            </table>
        </div>




    </div>
    <!-- Modal for displaying details -->
    <div class="modal fade" id="detailModal" tabindex="-1" aria-labelledby="detailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailModalLabel">Chi tiết bài đăng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalBody">
                    <div id="modalContent"></div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // const service = [];
        // let userId = localStorage.getItem('user_id');

        document.getElementById("btnAdd").addEventListener("click", function () {
            // Mở modal thêm dịch vụ
            const addUserModal = new bootstrap.Modal(document.getElementById("addUserModal"));
            addUserModal.show();
        });
        document.getElementById("addUserForm").addEventListener("submit", async (e) => {
            e.preventDefault(); // Ngăn form reload trang

            // Lấy dữ liệu từ form
            const name = document.getElementById("name").value;
            const description = document.getElementById("description").value;
            const price = document.getElementById("price").value;
            const photos = document.getElementById("photos").files;

            // Tạo FormData để xử lý file upload
            const formData = new FormData();
            formData.append("name", name);
            formData.append("description", description);
            formData.append("price", price);

            // Duyệt qua các tệp ảnh được chọn và thêm vào formData
            for (const file of photos) {
                formData.append("photos", file);
            }

            try {
                // Gửi dữ liệu tới API
                const response = await fetch(`/api/services/add/${userId}`, {
                    method: "POST",
                    body: formData, // Gửi dữ liệu dạng multipart/form-data
                });

                const result = await response.json();
                if (response.ok) {
                    alert("Thêm dịch vụ thành công!");
                    const addUserModal = bootstrap.Modal.getInstance(document.getElementById("addUserModal"));
                    addUserModal.hide(); // Đóng modal
                    e.target.reset(); // Xóa dữ liệu trong form
                    window.location.reload(); // Làm mới trang
                } else {
                    alert(`Thêm dịch vụ thất bại: ${result.message}`);
                }
            } catch (error) {
                console.error("Lỗi khi thêm dịch vụ:", error);
                alert("Đã xảy ra lỗi khi thêm dịch vụ.");
            }
        });




        //xem chi tiet
        function openDetailModal(button) {
            const showList = JSON.parse(button.getAttribute('data-show-list'));

            const modalContent = document.getElementById('modalContent');
            modalContent.innerHTML = ''; // Xóa nội dung cũ

            // Hiện ảnh
            if (showList.photos && showList.photos.length > 0) {
                const photoSection = document.createElement('div');
                photoSection.innerHTML = '<h3>Ảnh</h3>';
                showList.photos.forEach(photo => {
                    const img = document.createElement('img');
                    img.src = `/public/uploads/${photo}`;
                    img.alt = 'Ảnh';
                    img.className = 'img-fluid mb-2'; // Thêm class để responsive
                    photoSection.appendChild(img);
                });
                modalContent.appendChild(photoSection);
            }
            const detailModal = new bootstrap.Modal(document.getElementById('detailModal'));
            detailModal.show();
        }
        //sua
        // Chức năng mở modal sửa dịch vụ
        function editService(serviceId, currentName, currentDescription, currentPrice, currentPhotos = []) {//, currentPhotos
            document.getElementById("editServiceId").value = serviceId;
            document.getElementById("editName").value = currentName;
            document.getElementById("editDescription").value = currentDescription;
            document.getElementById("editPrice").value = currentPrice;

            // Hiển thị ảnh hiện tại (nếu có)
            const editPhotoPreview = document.getElementById("editPhotoPreview");
            editPhotoPreview.innerHTML = ''; // Xóa ảnh cũ nếu có

            currentPhotos.forEach(photos => {
                const img = document.createElement("img");
                img.src = `/public/uploads/${photos}`;
                img.alt = "Ảnh hiện tại";
                img.className = "img-fluid img-thumbnail me-2";
                img.style.width = "100px";
                editPhotoPreview.appendChild(img);
            });

            const editServiceModal = new bootstrap.Modal(document.getElementById("editServiceModal"));
            editServiceModal.show();
        }

        // Xử lý khi nhấn nút "Lưu thay đổi" trong modal sửa
        document.getElementById("editServiceForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const serviceId = document.getElementById("editServiceId").value;
            const name = document.getElementById("editName").value;
            const description = document.getElementById("editDescription").value;
            const price = document.getElementById("editPrice").value;
            const photosInput = document.getElementById("editPhotos");
            if (!photosInput) {
                console.error("Không tìm thấy phần tử với ID 'editPhotos'.");
                return;
            }
            const photos = photosInput.files;

            const formData = new FormData();
            formData.append('name', name);
            formData.append('description', description);
            formData.append('price', price);

            // Duyệt qua các ảnh mới và thêm vào FormData
            for (const file of photos) {
                formData.append("photos", file);
            }

            // Gửi yêu cầu PUT tới API mà không cần Content-Type trong header
            const response = await fetch(`/api/services_mgr/update/${serviceId}`, {
                method: 'PUT',
                body: formData,
            });

            const data = await response.json();
            if (response.ok) {
                alert("Cập nhật dịch vụ thành công!");
                const editServiceModal = bootstrap.Modal.getInstance(document.getElementById("editServiceModal"));
                editServiceModal.hide();
                window.location.reload();
            } else {
                alert(`Lỗi: ${data.message}`);
            }
        });

        //xoa
        function confirmDelete(id) {
            if (confirm('Bạn có chắc muốn xóa sản phẩm này?')) {
                fetch(`/api/services1/${id}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Xóa không thành công');
                        }
                        return response.json();
                    })
                    .then(data => {
                        alert(data.message || 'Xóa thành công');
                        window.location.reload(); // Quay lại trang danh sách bài đăng
                    })
                    .catch(error => {
                        console.error(error);
                        alert('Đã xảy ra lỗi khi xóa');
                    });
            }
        }

    </script>
</body>

</html>